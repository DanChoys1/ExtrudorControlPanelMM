namespace Types
{
    public struct RESULT
    {
        public RESULT() { }

        public double
            // { Параметры степенного реологического уравнения }
            Mu0 = 0,
            b = 0,
            n = 0,
            T0 = 0,
            //{ Температуро- и теплопроводность материала }
            a = 0,
            Lam = 0;
        public int
            //{Число значений объёмного расхода Q }
            n_Q = 0;
        public double[]
            //{ Расходные характеристики червячной машины } 
            MQ = new double[61],
            MP = new double[61],
            MT = new double[61];
    }

    //QPT Types
    public struct DOP_DATA
    {
        public DOP_DATA() { }

        public double 
            Q = 0; //Если Q известен
        public double
            Alfa_min = 0, //{ (Q/Q_b)_min через наиболее узкий канал червяка; }
            Alfa_max = 0; //{ (Q/Q_b)_max через наиболее узкий канал червяка; }
        public int
            n_Alfa = 0; //{ Число шагов по Q/Q_b }
    }

    public struct SECT //= ARRAY[1..29] of RECORD          { ГЕОМЕТРИЯ СЕКЦИЙ ЧЕРВЯКА }
    {
        public SECT() { }

        public int
            S_Type = 0,                 //{ Тип секции: 1 - с нарезкой, 2 - гладкая }
            Order = 0,                   //{ П о р я д к о в ы й  н о м е р  секции }
            n_cykle = 0,               //{ Число циклов интегрирования вдоль секции }
            Monolit = 0,        //{ П р и з н а к  монолитности (1) или рыхлости (0)}
            n_Line = 0,                            //{ Число заходов винтовой линии }
            R_or_L = 0,                      //{ Тип нарезки: 1 - правая, 2 - левая }
            p_W = 0;      //{ Признак: 1 - возможность испарения; 2 - герметичность }

        public double
            D_st = 0,            //{ Внутренний диаметр корпуса в начале секции, мм }
            D_fin = 0,            //{ Внутренний диаметр корпуса в конце секции, мм }
            L_sect = 0,                                        //{ Длина секции, мм }
            step_ = 0,                           //{ Шаг подъема винтовой линии, мм }
            H_st = 0,           //{ Глубина винтового канала (или радиальный зазор) }
                                //{ в  н а ч а л е  секции, мм }
            H_fin = 0,          //{ Глубина винтового канала (или радиальный зазор) }
                                //{ в  к о н ц е  секции, мм }
            e_st = 0,                        //{ Толщина гребна в начале секции, мм }
            e_fin = 0,                        //{ Толщина гребна в конце секции, мм }
            delta = 0,                                     //{ Радиальнвй зазор, мм }
            d_Fi = 0,      //{ Угол поворота секции по отношению к предыдущей, град.}
            W_a = 0;               //{ Суммарная ширина осевых прорезей нарезки, мм }
    }

    public struct DATA_
    {
        public DATA_() { }

        public int
            nS_1 = 0,     //{ Число секций c нарезкой червяка }
            nS_2 = 0,     //{ Число гладких секций червяка }
            nS_korp = 0,  //{ Число секций корпуса с разной температурой }
            Var_Tscr = 0, //{ Род теплового граничного условия на поверхности червяка }
            n_Integr = 0, //{ Число циклов интегрирования вдоль оси червяка }
            n_Graph = 0;  //{ Число циклов вдоль оси червяка при его рисовании }

        public double
            T0_ = 0,    //{ Фиксированное значение температуры материала }
            Mu0_ = 0,   //{ Коэффициент консистенции при температуре T0_, кПа*с^n }
            b_ = 0,     //{ Степень влияния температуры на вязкость полимера, 1/K }
            m_ = 0,     //{ Индекс течения полимера }
            N_ = 0,     //{ Частота вращения червяка, об/мин }
            Ro_ = 0,    //{ Плотность полимерного материала, кг/м^3 }
            Ro_gran_ = 0,//{ Плотность пробки гранул, кг/м^3 }
            T_PL_ = 0,   //{ Температура плавления (или размягчения) полимера,
                         //гр.Цельсия }
            K_PL_ = 0,   //{ Скрытая теплота плавления полимера, кДж/кг }
            T_St = 0,   //{ Начальная температура полимера, гр.Цельсия }
            a_T_ = 0,   //{ Коэффициент температуропроводности полимера, м^2/с }
            Lam_T_ = 0, //{ Коэффициент теплопроводности полимера, Вт/(м*К) }
            Lam_k = 0,  //{Коэффициент теплопроводности материала корпуса,Вт/(м*К)}
            Lam_s = 0,  //{Коэффициент теплопроводности материала червяка,Вт/(м*К)}
            Al_kor = 0, //{Коэффициент теплоотдачи полимера к корпусу, Вт/(м^2*К)}
            Al_scr = 0, //{Коэффициент теплоотдачи полимера к червяку, Вт/(м^2*К)}
            Del_s = 0,  //{Толщина теплопередающей стенки червяка, мм}
            Al_W_s = 0, //{Коэффициент теплоотдачи теплоносителя к червяку,
                        //Вт/(м^2*К)}
            T_W_s = 0,  //{Температура теплоносителя в полости червяка, град.Ц. }
            a_W = 0,    //{Коэффициент температуропроводности теплоносителя в полости
                        //червяка, м^2/с}
            Lam_W = 0,  //{Коэффициент теплопроводности теплоносителя в полости
                        //червяка, Вт/(м*К)}
            Q_W_s = 0,  //{Объемный расход теплоносителя, охлаждающего червяк,
                        //дм^3/мин}
            T_scr = 0;  //{Альтернативная температура червяка, град.Ц.}

        public double[]
        Lam_kor = new double[41],   //{ Координаты границ секций корпуса, мм }
        T_kor = new double[41];     //{ Температуры секций корпуса, град.Цельсия }
    }

    public struct CYLINDER //= ARRAY[1..14] of RECORD
    {
        public CYLINDER() { }

        public int
            Var_T = 0;    //{Род теплового граничного условия: 1 или 3}

        public double
            L_sec = 0,    //{Длина секции корпуса, мм}
            Del_k_ = 0,   //{Толщина теплопередающей стенки корпуса, мм}
            T_W_k_ = 0,  // {Температура теплоносителя или корпуса, град.Ц.}
            Al_W_k_ = 0,  //{Коэффициент теплоотдачи теплоносителя к корпусу,
                          // Вт/(м^2*К)}
            a_W_k_ = 0,   //{Коэффициент температуропроводности теплоносителя, м^2/с}
            Lam_W_k_ = 0, //{Коэффициент теплопроводности теплоносителя, Вт/(м*К)}
            Q_W_k_ = 0,   //{Объемный расход теплоносителя, охлаждающего корпус,
                          //  дм^3/мин}
            q_int_k = 0,  //{Расчетный интегральный тепловой поток через
                          // теплопередающую стенку, Вт}
            dT_W_k = 0;   //{Изменение температуры теплоносителя к моменту истечения
                          //из секции корпуса, град.Ц}
    }

    public struct S_CUT       //{ ГЕОМЕТРИЯ СЕКЦИЙ ЧЕРВЯКА С НАРЕЗКОЙ }
    {
        public S_CUT() { }

        public int Num_C = 0;
        public SECT[] S = new SECT[29];
    }
    public struct S_SM           //{ ГЕОМЕТРИЯ ГЛАДКИХ СЕКЦИЙ ЧЕРВЯКА }
    {
        public S_SM() { }

        public int Num_S = 0;
        public SECT[] S = new SECT[29];
    }
    public struct S_BAR                             //{ СЕКЦИИ КОРПУСА }
    {
        public S_BAR() { }

        public int Num_B = 0;
        public CYLINDER[] S = new CYLINDER[14];
    }

    //DIE Types
    public struct FluxData
    {
        public FluxData() { }

        public int
            N, //{ Число сопряженных материальных концентрических слоев }
            iR;  //{    Число регулярных шагов по r/R для построения v(r) }
        public double
            AH, AB, //{ Коэффициенты неравномерности шага по "alpha" }
            kH, kB;  //{     Коэффициенты неравномерности шага по r/R }
    }

    //{ ГЕОМЕТРИЯ СЕКЦИЙ КАНАЛА }
    public struct SECTIONS // ARRAY[1..29] Of Record
    {
        public int
            PRIZNAK,
            Order, //{   П о р я д к о в ы й  н о м е р  секции }
            n_cykle; //{ Число циклов интегрирования вдоль секции }

        public double
            D_st, //{   Наружный диаметр канала в начале секции, мм }
            D_fin, //{    Наружный диаметр канала в конце секции, мм }
            D_B_st, //{ Внутренний диаметр канала в начале секции, мм }
            D_B_fin, //{  Внутренний диаметр канала в конце секции, мм }
            L_sect, //{ Длина секции, мм }
            T_st, //{   Температура стенки канала в пределах секции }
            T_B; //{      Температура сердечника в пределах секции }
    }

    //{ ГЕОМЕТРИЯ СЕКЦИЙ КАНАЛА ГОЛОВКИ }
    public struct S_KG
    {
        public S_KG() { }

        public int Num_S;
        public SECTIONS[] S = new SECTIONS[29];
    }

    public struct RESULT_D
    {
        public RESULT_D() { }

        public double
            v_profil,   // { Линейная скорость движения профиля, м/с }
            D_Last,     // { Диаметр выпусаекаемой трубки расплава, мм }
            Delta,      // { Толщина стенки трубки расплава, мм }
            a, Lam;      //{ Температуро- и теплопроводность полимера }

        public int
            n_slices;   // { Число сопряженных матермальных слоев полимера }

        public double[]
            T_START = new double[61],    // { Узловые значения температуры профиля T(r/R) }
            R_rel = new double[61];      // { Узловые значения координат r/R }
    }

    public struct Res_fin
    {
        public Res_fin() { }

        public double
            Q_fin, v_fin, T_mid, R_inter, delta;
    }
}